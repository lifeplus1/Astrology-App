name: Monorepo CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  API_KEY: ${{ secrets.API_KEY }}
  LOG_FILE: app.log
  PORT: 8000
  EPHE_PATH: /app/ephe
  FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js (Frontend)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install
      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm test
      - name: Set up Python (Backend)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt
      - name: Run Backend Tests
        working-directory: ./backend
        env:
          API_KEY: ${{ env.API_KEY }}
          FIREBASE_CREDENTIALS: ${{ env.FIREBASE_CREDENTIALS }}
        run: pytest
      - name: Build Docker Image (Backend)
        working-directory: ./backend
        run: docker build -t backend-image .

  deploy-frontend:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
        env:
          API_KEY: ${{ env.API_KEY }}

  deploy-backend:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
        env:
          API_KEY: ${{ env.API_KEY }}
          LOG_FILE: ${{ env.LOG_FILE }}
          PORT: ${{ env.PORT }}
          EPHE_PATH: ${{ env.EPHE_PATH }}
          FIREBASE_CREDENTIALS: ${{ env.FIREBASE_CREDENTIALS }}