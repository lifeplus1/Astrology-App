import React, { useEffect } from 'react';
import { AuthProvider } from '@cosmichub/auth';
import { useCrossAppStore, CrossAppBridge } from '@cosmichub/integrations';
import ErrorBoundary from './components/ErrorBoundary';
import Navbar from './components/Navbar';
import Footer from './components/Footer';
import { SubscriptionProvider } from './contexts/SubscriptionContext';
import { auth } from './firebase';
import type { ChartData } from './types';

// App configuration for permissions and features
const APP_CONFIG = {
  features: {
    'premium-charts': ['premium', 'admin'],
    'ai-interpretation': ['premium', 'admin'],
    'pdf-export': ['premium', 'admin'],
    'healwave-integration': ['free', 'premium', 'admin']
  },
  permissions: {
    'save-charts': ['free', 'premium', 'admin'],
    'export-data': ['premium', 'admin'],
    'admin-panel': ['admin']
  }
};

interface ExtendedChartData extends ChartData {
  latitude: number;
  longitude: number;
  timezone: string;
  julian_day: number;
  angles: Record<string, number>;
}

function MainApp(): JSX.Element {
  const { setIntegrationMode } = useCrossAppStore();

  useEffect(() => {
    // Initialize cross-app communication
    const cleanup = CrossAppBridge.setupMessageListener();
    
    // Check connectivity to other apps
    CrossAppBridge.checkConnectivity();
    
    // Set integration mode based on environment
    setIntegrationMode('extended');

    // Announce this app is ready
    CrossAppBridge.sendMessage('ASTRO_READY', { timestamp: Date.now() });

    return cleanup;
  }, [setIntegrationMode]);

  return (
    <div className="app-container min-h-screen bg-cosmic-dark">
      <Navbar />
      <main className="main-content">
        {/* Router content will be added here */}
        <div className="container mx-auto px-4 py-8">
          <h1 className="text-3xl font-bold text-cosmic-gold text-center mb-8">
            ðŸŒŸ CosmicHub Astrology
          </h1>
          <p className="text-cosmic-silver text-center">
            Enhanced astrology application with cross-app integrations
          </p>
        </div>
      </main>
      <Footer />
    </div>
  );
}

const App: React.FC = () => (
  <AuthProvider firebaseAuth={auth} appConfig={APP_CONFIG}>
    <SubscriptionProvider>
      <ErrorBoundary>
        <MainApp />
      </ErrorBoundary>
    </SubscriptionProvider>
  </AuthProvider>
);

export default App;
