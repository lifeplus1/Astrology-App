#############################################################
# GitLab CI/CD for CosmicHub (budget-friendly monorepo)     #
# Focus: Env validation, type-check, lint, tests, build.    #
# Backend Python tests retained; frontends via turbo.       #
#############################################################

stages:
  - validate
  - typecheck
  - lint
  - test
  - build

variables:
  NODE_VERSION: "20"
  PYTHON_VERSION: "3.13"
  NODE_ENV: production
  TURBO_TELEMETRY_DISABLED: "1"
  # Public build fallbacks (override with protected CI/CD variables)
  VITE_API_URL: ${VITE_API_URL:-https://api.example.com}
  VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY:-placeholder}
  VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID:-placeholder}
  VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID:-1:000:web:placeholder}

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/
    - .turbo/cache
    - backend/.venv/
  policy: pull-push

.node_template: &node_template
  image: node:${NODE_VERSION}
  before_script:
    - node -v
    - npm -v
    - npm ci --cache .npm --prefer-offline

.python_setup: &python_setup
  before_script:
    - python3 -V || apt-get update && apt-get install -y python3 python3-venv python3-pip
    - python3 -m venv backend/.venv
    - source backend/.venv/bin/activate
    - pip install --upgrade pip
    - pip install -r backend/requirements.txt

validate_env:
  <<: *node_template
  stage: validate
  script:
    - npm run validate-env
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - app.log

validate_env_schema:
  <<: *node_template
  stage: validate
  needs: ["validate_env"]
  script:
    - npm run validate-env-schema

secret_scan:
  image: zricethezav/gitleaks:latest
  stage: validate
  script:
    - gitleaks detect --verbose --no-git --source=. --report-format=json --report-path=gitleaks-report.json || true
    - if [ -s gitleaks-report.json ]; then echo "Secrets detected!" && cat gitleaks-report.json && exit 1; fi
    - echo "No secrets detected"
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - gitleaks-report.json
  allow_failure: false

type_check:
  <<: *node_template
  stage: typecheck
  needs: ["validate_env"]
  script:
    - npm run type-check

lint:
  <<: *node_template
  stage: lint
  needs: ["validate_env"]
  script:
    - npm run lint

backend_tests:
  image: python:${PYTHON_VERSION}
  stage: test
  needs: ["type_check","lint"]
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install -r backend/requirements.txt
  script:
    - pytest backend/tests -q
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - backend/.pytest_cache

frontend_tests:
  <<: *node_template
  stage: test
  needs: ["type_check","lint"]
  script:
    - npm run test:coverage -- --ci --reporter=default
    - npm run coverage:report
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - apps/astro/coverage
      - apps/healwave/coverage
      - coverage/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

build_all:
  <<: *node_template
  stage: build
  needs: ["backend_tests","frontend_tests"]
  script:
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - apps/**/dist
      - packages/**/dist
      - backend

# Optional deploy stage can be appended here referencing build artifacts
