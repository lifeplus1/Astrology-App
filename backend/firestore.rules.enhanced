// Enhanced Firestore Security Rules with Rate Limiting
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // User authentication check
    function isSignedIn() {
      return request.auth != null;
    }
    
    // User ownership check
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Rate limiting helper (approximate)
    function isWithinRateLimit() {
      return request.time > resource.data.last_write + duration.value(1, 's');
    }
    
    // Data validation helpers
    function isValidChartData() {
      return request.resource.data.keys().hasAll(['id', 'chart_type', 'birth_data', 'created_at']) &&
             request.resource.data.birth_data is map &&
             request.resource.data.chart_type is string &&
             request.resource.data.created_at is timestamp;
    }
    
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['email']) &&
             request.resource.data.email is string;
    }
    
    // Users collection - user can only access their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId) && isValidUserData();
      
      // User charts subcollection
      match /charts/{chartId} {
        allow read, write: if isOwner(userId) && 
                             isValidChartData() &&
                             isWithinRateLimit();
        
        // Limit chart creation to prevent spam
        allow create: if isOwner(userId) && 
                        isValidChartData() &&
                        // Max 10 charts per day per user
                        resource.data.charts_today < 10;
      }
      
      // User sessions for premium features
      match /sessions/{sessionId} {
        allow read, write: if isOwner(userId);
      }
      
      // User settings
      match /settings/{settingId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Subscription data (read-only for users)
    match /subscriptions/{subscriptionId} {
      allow read: if isSignedIn() && 
                    resource.data.user_id == request.auth.uid;
      allow write: if false; // Only server can write subscription data
    }
    
    // Premium content access control
    match /premium_content/{contentId} {
      allow read: if isSignedIn() && 
                    // Check if user has active subscription
                    get(/databases/$(database)/documents/subscriptions/$(request.auth.uid)).data.status == 'active';
    }
    
    // Public astrology data (read-only)
    match /astrology_data/{dataId} {
      allow read: if true; // Public access for basic astrology data
      allow write: if false; // Only admins can modify
    }
    
    // Analytics and logs (write-only for users)
    match /analytics/{analyticsId} {
      allow create: if isSignedIn() && 
                      request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if false;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
